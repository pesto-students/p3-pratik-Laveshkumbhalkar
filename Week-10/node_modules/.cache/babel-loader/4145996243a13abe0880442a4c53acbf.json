{"ast":null,"code":"var _jsxFileName = \"/Users/laveshkumbhalkar/REACTJS/website/src/components/LinkResult.jsx\",\n    _s = $RefreshSig$();\n\nimport useState from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst LinkResult = () => {\n  _s();\n\n  const [shortenLink, setShortenLink] = useState(\"DSFDS\");\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [shortenLink, /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"copy to clipboard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n};\n\n_s(LinkResult, \"6D00n1db6euHbU32OqoMMlk1BWk=\");\n\n_c = LinkResult;\nexport default LinkResult;\n\nvar _c;\n\n$RefreshReg$(_c, \"LinkResult\");","map":{"version":3,"names":["useState","LinkResult","shortenLink","setShortenLink"],"sources":["/Users/laveshkumbhalkar/REACTJS/website/src/components/LinkResult.jsx"],"sourcesContent":["import  useState from 'react'\n\nconst LinkResult = () => {\n\n    const [shortenLink, setShortenLink] = useState(\"DSFDS\");\n    return (\n      <>\n    <div>\n      <p>\n        {shortenLink}\n        <button>copy to clipboard</button>\n      </p>\n    </div>\n      </>\n  );\n}\n\nexport default LinkResult;"],"mappings":";;;AAAA,OAAQA,QAAR,MAAsB,OAAtB;;;;AAEA,MAAMC,UAAU,GAAG,MAAM;EAAA;;EAErB,MAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCH,QAAQ,CAAC,OAAD,CAA9C;EACA,oBACE;IAAA,uBACF;MAAA,uBACE;QAAA,WACGE,WADH,eAEE;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAFF;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA;EADE,iBADF;AAUH,CAbD;;GAAMD,U;;KAAAA,U;AAeN,eAAeA,UAAf"},"metadata":{},"sourceType":"module"}